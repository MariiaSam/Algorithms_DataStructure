Алгоритми пошуку

1. Лінійний пошук
Це найпростіший алгоритм пошуку, який використовується для знаходження певного елемента в списку (масиві).
З точки зору часу виконання, лінійний пошук може бути досить повільним для великих списків. У найгіршому випадку (коли елемент або не знаходиться у списку, або є останнім елементом списку), лінійний пошук має лінійну часову складність 
O(n), де n — це кількість елементів у списку. Однак, у середньому випадку, коли елемент може знаходитись на будь-якій позиції у списку, очікувана часова складність становить O(n/2), що все ще лінійно. 

2. Двійковий (бінарний) пошук
Це ефективний алгоритм пошуку, який працює на відсортованих списках (масивах). Його принцип роботи полягає в тому, що він розділяє список навпіл і перевіряє, чи є середній елемент тим, що ми шукаємо. Якщо це так, ми знаходимо наше значення і завершуємо пошук. Якщо ні, ми можемо відкинути половину списку, в якому знаходимося, та продовжимо пошук в іншій половині.

3. Інтерполяційний пошук — це алгоритм пошуку, який використовує ідею інтерполяції для пошуку елемента у відсортованому списку або масиві. Він працює швидше, ніж бінарний пошук для списків з великим розмахом значень, де ключі розподілені рівномірно.

4. Хеш-таблиці та хеш-функції
Хеш-таблиці — це реалізація асоціативного масиву, списку пар ключ-значення, які дозволяють отримати значення за допомогою ключа. Внутрішня хеш-таблиця використовує хеш-функцію для перетворення значення ключа в індекс, який вказує на те, де саме значення зберігається в пам’яті.





